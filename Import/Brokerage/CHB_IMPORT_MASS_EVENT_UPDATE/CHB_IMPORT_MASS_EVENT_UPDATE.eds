//32F0A6EFE999ADBBCA4367407E8A724825
//On 5/25/2017, iah-paull signed this file.
Program CHB_IMPORT_MASS_EVENT_UPDATE;

//**************************************************************************************
// SCRIPT: 		CHB_IMPORT_MASS_EVENT_UPDATE
// SYSTEM: 		IMPORT
// DESC:		Enters a user-entered event on a list of input files.
//				Run script from SHIPLOG, reads in list of files from input file.
//				Prompts user for event, date, time, and comment.
// LIMITS: 		N/A
// Script ID: 	
// AUTHOR		DATE		STATUS
// ------------ ----------- ------------------------------------------------------------
// Julia Holz	10/25/12	Version 1.0 - Updates user-input event
//
//**************************************************************************************

// ==============================================================================================
// ------------------------------  M A I N    S C R I P T ---------------------------------------
// ==============================================================================================

Type

    logInput = record
             logFile       : string;
end;

var
	enterevent    : string;
	entercomment  : string;
	eventdate	  : string;
	eventtime	  : string;
	i 			  : integer;
	logInput      : tTextFile;
	logLastRow 	  : integer;
	logList       : Array[0..15000] of logInput;
	xLog          : integer;
	
begin

// =================  Verify Screen and File is Blank ======================
if (formname <> 'sls00sMain') or (trim(getvalue('invoice_No')) <> '') then
begin
	showmessage('Please replay this script on a blank SHIPLOG screen');
	exit;
end;

// =============Read in file numbers to array===================

ASSIGNFILE(logInput, 'F:\Scripting\Import\CHB_IMPORT_MASS_EVENT_UPDATE\Input\input.csv');

Reset(logInput);
xLog := -1;
REPEAT
	   xLog := xLog+1;
	   logList[xLog].logFile := TRIM(READ(logInput));
UNTIL EOF(logInput);
 logLastRow := xLog;
 Close(logInput);

// showmessage(logList[xLog].logFile);
 
// ================ Indicate which event to void ==============

enterevent := '';

while enterevent = '' do begin
if inputquery('Update event', 'Enter the event you would like to enter:', enterevent) = false then exit;
enterevent := uppercase(trim(enterevent));
end;

eventdate := 'x';
if inputquery('Update event', 'Enter the event DATE.', eventdate) = false then exit;
eventdate := uppercase(trim(eventdate));

eventtime := 'x';
if inputquery('Update event', 'Enter the event TIME', eventtime) = false then exit;
eventtime := uppercase(trim(eventtime));

if inputquery('Update event', 'Enter the text of any comment you would like on the event.  The same comment will be applied to all events.'  
							  + chr(10) + chr(10) +	'Leave blank if you do not want to enter a comment.',
	entercomment) = false then exit;
entercomment := uppercase(trim(entercomment));

doaction('PF6'); // Press SHIPMT HIST button

// ==============SHPMNT HIST screen=============================

//Check for Shipment History screen
if (formname <> 'slseShip_Head') then
begin
	showmessage('Please replay this script on the SHIPLOG screen');
	exit;
end;

//Bring up file

for xLog := 0 to logLastRow Do Begin
	setValue('invoice_No', logList[xLog].logFile);
	doAction('PF2');

//Enter the event

setvalue('event_Code1', enterevent);
setvalue('post_Date1', eventdate);
setvalue('time_Text1', eventtime);
setvalue('event_Desc1', entercomment);

doaction('PF1'); //Update
	
end; //End FOR loop

// ==============Clear screen=============================
doAction('PF8'); //Return to SHIPLOG
doAction('PF3'); //Clear screen
	
end.